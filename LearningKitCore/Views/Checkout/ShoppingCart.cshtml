@model LearningKitCore.Models.ECommerce.Checkout.ShoppingCartViewModel
@using LearningKitCore.Models.ECommerce.Checkout;


@{
    ViewBag.Title = "Shopping cart";
}

<h2>Shopping cart</h2>

@*DocSection:CartContent*@
@if (Model.IsEmpty)
{
    <span>Your shopping cart is empty.</span>
}
else
{
    <ul>
        @* Loops through all shopping cart items. *@
        @foreach (ShoppingCartItemViewModel cartItem in Model.CartItems)
        {
            @* Displays the shopping cart item's properties. *@
            <li>
                @if (cartItem.SKUImageUrl != null)
                {
                    <img src="@cartItem.SKUImageUrl" alt="@cartItem.SKUName">
                }
                @cartItem.CartItemUnits&times; @cartItem.SKUName ... @String.Format(Model.CurrencyFormatString, cartItem.TotalPrice)

                @* Allows the item to be removed. *@
                <form asp-action="RemoveItem" asp-controller="Checkout" method="post">
                    <input type="hidden" asp-for="@cartItem.CartItemID" />
                    <input type="submit" value="Remove" />                
                </form>
            </li>
        }
    </ul>
    @* Allows all items to be removed. *@
    <a asp-action="RemoveAllItems" asp-controller="Checkout">Remove all products</a>
}
@*EndDocSection:CartContent*@

@* Displays the remaining value of products that needs to be added to the shopping cart to qualify for free shipping. *@
@if (Model.RemainingAmountForFreeShipping > 0)
{
    <p>Spend @String.Format(Model.CurrencyFormatString, Model.RemainingAmountForFreeShipping) more to receive free shipping.</p>
}


<h2>Coupon codes</h2>

@*DocSection:CouponCode*@
@* Renders a text box for entering coupon codes and a button invoking
    an action that handles adding of new coupon codes. *@
<form asp-action="AddCouponCode" asp-controller="Checkout" method="post">
    <input type="text" name="CouponCode" />
    <input type="submit" value="Apply" />
    <span asp-validation-for="CouponCodes"></span>
</form>
@* Lists applied coupon codes with an option to remove them. *@
<ul>
    @* Loops through all applied coupon codes *@
    @foreach (string couponCode in Model.CouponCodes)
    {
        <li>
            @* Renders a button invoking the action that removes specified coupon codes. *@
            <form asp-action="RemoveCouponCode" asp-controller="Checkout" method="post">
                <input type="hidden" name="couponCode" value="@couponCode" />
                <input type="submit" value="Remove" />
            </form>
        </li>
    }
</ul>
@*EndDocSection:CouponCode*@

<h2>Total price: @String.Format(Model.CurrencyFormatString, Model.GrandTotal)</h2>

<p>
    @*DocSection:Button*@
    @* Links to the next step of the checkout process. *@
    <a asp-action="DeliveryDetails" asp-controller="Checkout">Continue to the customer details step</a>
    @*EndDocSection:Button*@
    <br />
    <a asp-action="DeliveryDetailsAddressSelector" asp-controller="Checkout">Continue to the customer details step (with auto-fill for shipping addresses)</a>
</p>